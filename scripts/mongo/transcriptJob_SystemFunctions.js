db.system.js.save(  {    _id: "cJobStats",    value: function () {      var pipeline = [        {          $group: {            _id: {"type": "$type", "status": "$status"},            "count": {"$sum": 1}          }        },        {          "$sort": {            "_id.type": 1          }        }      ];      return db.getCollection('student-transcript.jobs').aggregate(pipeline);    }  });db.system.js.save(  {    _id: "qFailingJobs",    value: function (daysOld) {      if (isNaN(daysOld)) daysOld = 0;      var millisecondsPerDay = 24 /*hours*/ * 60 /*minutes*/ * 60 /*seconds*/ * 1000 /*milliseconds)*/;      return {        $or: [          {status: 'waiting'},          {status: 'failed'}        ],        created: {$lte: new Date(ISODate().getTime() - ( daysOld * millisecondsPerDay))},        failures: {$exists: true}      };    }  });db.system.js.save(  {    _id: "cFailingJobs",    value: function (daysOld) {      return db.getCollection('student-transcript.jobs').find(qFailingJobs(daysOld));    }  });